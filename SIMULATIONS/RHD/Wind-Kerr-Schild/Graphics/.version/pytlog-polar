#!/bin/bash

python<<EOF
import numpy as np
import matplotlib
matplotlib.rcParams['text.usetex'] = True
matplotlib.rcParams['text.latex.unicode'] = True
import matplotlib.pyplot as plt
from matplotlib import colors, ticker, cm
import linecache
from PIL import Image

#Time reading
time = float(linecache.getline("data_$1.dat",2))

#Mesh reading
Nx1 = int(linecache.getline("data_$1.dat",3))
Nx2 = int(linecache.getline("data_$1.dat",4))

#Data reading
xx, yy, n, p, u, v = np.loadtxt("data_$1.dat",skiprows=5,unpack=True)

n = n.reshape(Nx1,Nx2)
n = n.T

p = p.reshape(Nx1,Nx2)
p = p.T

u = u.reshape(Nx1,Nx2)
u = u.T

v = v.reshape(Nx1,Nx2)
v = v.T

nx = np.linspace(np.min(xx), np.max(xx), Nx1)
ny = np.linspace(np.min(yy), np.max(yy), Nx2)
X,Y = np.meshgrid(nx,ny)

plt.rc('font', family='serif')
plt.rc('text', usetex=True)

plt.figure(figsize=(18,12),dpi=100)
#plt.figure(figsize=(8,6),dpi=100)
plt.xlabel(r'\$r\$',fontsize=12)
plt.ylabel(r'\$z\$',fontsize=12)
plt.title(r'Time = %.2f s'%time,fontsize=12)

#Logaritmic linspace
levels = np.linspace(np.min(np.log10(n)),np.max(np.log10(n)),400)

#Linear linspace
#levels = np.linspace(0.0,np.max(n),400)

#Space between vectors
qx = 30
qy = 10

plt.subplot(projection='polar')
plt.xticks([])
plt.yticks(np.arange(0,11,step=2),[])
plt.pcolormesh(Y,X,np.log10(n),cmap=plt.cm.YlOrBr)
plt.pcolormesh(-Y,X,np.log10(n),cmap=plt.cm.YlOrBr)
plt.colorbar(label=r'Density $\rho$')

#uut= u/np.sqrt(u**2 + v**2)
#vvt= v/np.sqrt(u**2 + v**2)
#uu = np.nan_to_num(u)
#vv = np.nan_to_num(v)
#plt.quiver(Y[::qx,::qy],X[::qx,::qy],vv[::qx,::qy],uu[::qx,::qy],
#		  units='width',scale=15.5,cmap='Reds')
#plt.quiver(X[::qx,::qy],-Y[::qx,::qy],uu[::qx,::qy],-vv[::qx,::qy],
#		  units='width',scale=5.5,cmap='Reds')

plt.plot(yy,xx,ls='none')
plt.grid()


#Graph name
plt.savefig("N$2_py.png",dpi=100,bbox_inches="tight")
plt.close()

EOF
